---

# No-Fail steps to get a working sigstore stack with a fresh OpenShift cluster
# 0) obtain the base_domain with:
#       oc get dns/cluster -o jsonpath='{ .spec.baseDomain }' && echo
# 1) ./fulcio-create-root-ca-openssl.sh  (interactive, you'll enter "apps.<base_domain>" for the hostname, and enter the same password for all keys"
# 2) ./rekor-create-signer-key.sh
# 3) substitute base_domain from above (rosa.***.com) in 5 places in this file, like so in VIM :) 
#         :%s/rosa.*.com/rosa.p9esn-qgkm3-wkk.o7au.p3.openshiftapps.com/g
# 4) Run the following:
#          helm upgrade -i scaffolding --debug . -n sigstore --create-namespace -f examples/values-rosa-upstream-images.yaml
#
#          A good way to tell if things are progressing well is to watch 'oc get jobs -A' and when the tuf-system job is complete, things should be ready.
#          Once complete, move to the ./sign-verify.md to sign/verify artifacts

configs:
  fulcio:
    server:
      secret:
        name: fulcio-secret-rh
        password: "secure"
        public_key_file: "keys-cert/file_ca_pub.pem"
        private_key_file: "keys-cert/file_ca_key.pem"
        root_cert_file: "keys-cert/fulcio-root.pem"
  rekor:
    signer:
      secret:
        name: rekor-private-key
        private_key_file: "keys-cert/rekor_key.pem"
  cosign:
    BASE_DOMAIN: apps.rosa.p9esn-qgkm3-wkk.o7au.p3.openshiftapps.com

scaffold:
  ctlog:
    namespace:
      create: false
    server:
      image:
        registry: quay.io
        repository: securesign/ct_server
        version: v0.6.4
        pullPolicy: IfNotPresent
    createctconfig:
      backoffLimit: 30
      enabled: true
      initContainerImage:
        curl:
          registry: registry.access.redhat.com
          repository: ubi9/ubi-minimal
          version: latest
          imagePullPolicy: IfNotPresent
      image:
        registry: quay.io
        repository: securesign/createctconfig
        version: v0.6.4
        pullPolicy: IfNotPresent
    createtree:
      image:
        registry: quay.io
        repository: securesign/createtree
        version: v0.6.4
        pullPolicy: IfNotPresent
  fulcio:
    namespace:
      name: fulcio-system
      create: false
    createcerts:
      enabled: true
      image:
        registry: quay.io
        repository: securesign/createcerts
        version: v0.6.4
        pullPolicy: IfNotPresent
    server:
      image:
        registry: quay.io
        repository: securesign/fulcio
        version: v1.4.0
        pullPolicy: IfNotPresent
      secret: fulcio-secret-rh
      ingress:
        http:
          enabled: true
          className: ""
          annotations:
            route.openshift.io/termination: "edge"
          hosts:
          - host: fulcio.apps.rosa.p9esn-qgkm3-wkk.o7au.p3.openshiftapps.com
            path: /
    config:
      contents:
        OIDCIssuers:
          # https://<keycloak_instance>.<keycloak_ns>.<base_domain>/auth/realms/sigstore
          ? https://keycloak-keycloak-system.apps.rosa.p9esn-qgkm3-wkk.o7au.p3.openshiftapps.com/auth/realms/sigstore
          : IssuerURL: https://keycloak-keycloak-system.apps.rosa.p9esn-qgkm3-wkk.o7au.p3.openshiftapps.com/auth/realms/sigstore
            ClientID: sigstore
            Type: email

  rekor:
    namespace:
      namespace: rekor-system
      create: false
    server:
      image:
        registry: quay.io
        repository: securesign/rekor-server
        version: v1.2.2
        pullPolicy: IfNotPresent
      signer: /key/private
      signerFileSecretOptions:
        secretName: rekor-private-key
        secretMountPath: /key
        secretMountSubPath: private
        privateKeySecretKey: private
      ingress:
        className: ""
        annotations:
          route.openshift.io/termination: "edge"
        hosts:
          - host: rekor.apps.rosa.p9esn-qgkm3-wkk.o7au.p3.openshiftapps.com
            path: /
          
    createtree:
      image:
        registry: quay.io
        repository: securesign/createtree
        version: v0.6.4
        pullPolicy: IfNotPresent
    backfillredis:
      image:
        registry: quay.io
        repository: securesign/backfill-redis
        version: v1.2.2
        pullPolicy: IfNotPresent
  trillian:
    namespace:
      create: false
    createdb:
      image:
        registry: quay.io
        repository: securesign/createdb
        version: v0.6.4
        pullPolicy: IfNotPresent
    initContainerImage:
      netcat:
        registry: quay.io
        repository: securesign/netcat
        version: v1.0.0
      curl:
        registry: registry.access.redhat.com
        repository: ubi9/ubi-minimal
        version: latest
        imagePullPolicy: IfNotPresent
    redis:
      args:
        - /usr/bin/run-redis
        - --bind
        - 0.0.0.0
        - --appendonly
        - "yes"
      image:
        registry: registry.redhat.io
        repository: rhel9/redis-6
        version: "sha256:031a5a63611e1e6a9fec47492a32347417263b79ad3b63bcee72fc7d02d64c94"
        pullPolicy: IfNotPresent

    logSigner:
      image:
        registry: quay.io
        repository: securesign/trillian_log_signer
        version: v1.2.2
        pullPolicy: IfNotPresent
    logServer:
      image:
        registry: quay.io
        repository: securesign/trillian_log_server
        version: v1.2.2
        pullPolicy: IfNotPresent
    mysql:
      gcp:
        scaffoldSQLProxy:
          registry: quay.io
          repository: securesign/cloudsqlproxy
          version: v0.6.4
      image:
        registry: quay.io
        repository: securesign/trillian-db
        version: v1.5.2
        pullPolicy: IfNotPresent
      args: []
      securityContext:
        fsGroup: 0
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - mysqladmin ping -h localhost -u $MYSQL_USER -p$MYSQL_PASSWORD
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - mysqladmin ping -h localhost -u $MYSQL_USER -p$MYSQL_PASSWORD
  tuf:
    namespace:
      create: false
    secrets:
      fulcio:
        name: fulcio-secret-rh
    enabled: true
    ingress:
      className: ""
      annotations:
        route.openshift.io/termination: "edge"
      http:
        hosts:
          - host: tuf.apps.rosa.p9esn-qgkm3-wkk.o7au.p3.openshiftapps.com
            path: /
    deployment:
      registry: quay.io
      repository: securesign/tuf/server
      version: latest

  copySecretJob:
    enabled: true
    backoffLimit: 1000
